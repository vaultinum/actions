name: Setup Node and publish snapshot

on:
  workflow_call:
    inputs:
      run_npm_install:
        default: false
        type: boolean
      run_eslint:
        default: true
        type: boolean
      run_build:
        default: true
        type: boolean
      run_tests:
        default: false
        type: boolean
      runs-on:
        default: ubuntu-latest
        type: string
      timeout-minutes:
        default: 20
        type: number
      brand:
        type: string
        description: Brand to use for the package
      snapshot-suffix:
        type: string
        description: Snapshot suffix to use for the package
    outputs:
      snapshot-full-version:
        description: The full version of the snapshot
        value: ${{ jobs.publish-snapshot.outputs.snapshot-full-version }}
    secrets:
      NPM_PACKAGE_ACCESS:
        required: true
      GH_TOKEN:
        required: true
      SONAR_TOKEN:
        required: false
      SONAR_URL:
        required: false
      TEST_KEY:
        required: false

concurrency:
  group: publish-snapshot-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}${{ inputs.brand }}
  cancel-in-progress: true

jobs:
  generate-snapshot-suffix:
    runs-on: ${{ inputs.runs-on }}
    outputs:
      snapshot-suffix: ${{ steps.generate-suffix.outputs.snapshot-suffix || inputs.snapshot-suffix }}
    steps:
      - name: Generate suffix
        if:  ${{ inputs.snapshot-suffix == '' }}
        id: generate-suffix
        uses: vaultinum/actions/generate-suffix@v14
  publish-snapshot:
    needs: generate-snapshot-suffix
    runs-on: ${{ inputs.runs-on }}
    outputs:
      snapshot-full-version: ${{ steps.package.outputs.version }}
    timeout-minutes: ${{ inputs.timeout-minutes }}
    env:
      NPM_PACKAGE_ACCESS: ${{ secrets.NPM_PACKAGE_ACCESS }}
      NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}
      TEST_KEY: ${{ secrets.TEST_KEY }}
    steps:
      - name: Checkout Current Repository
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22.4.1
          registry-url: "https://npm.pkg.github.com/"
      - name: Trigger ci
        uses: vaultinum/actions/ci@v14
        with:
          run_npm_install: ${{ inputs.run_npm_install }}
          run_eslint: ${{ inputs.run_eslint }}
          run_build: ${{ inputs.run_build }}
          run_tests: ${{ inputs.run_tests }}
          brand: ${{ inputs.brand }}
      - name: Update snapshot version
        if: ${{ inputs.brand == '' }}
        run: npm version prerelease --no-git-tag-version --preid=$PRE_ID
        env:
          PRE_ID: SNAPSHOT-${{ inputs.snapshot-suffix || needs.generate-snapshot-suffix.outputs.snapshot-suffix }}
      - name: Update snapshot version for brand
        if: ${{ inputs.brand != '' }}
        run: npm version prerelease --no-git-tag-version --preid=$PRE_ID
        env:
          PRE_ID: SNAPSHOT-${{ inputs.snapshot-suffix || needs.generate-snapshot-suffix.outputs.snapshot-suffix }}-${{ inputs.brand }}
      - name: Publish snapshot
        run: npm publish --tag=snapshot
      - name: Find package info comment
        uses: peter-evans/find-comment@v2
        id: find-comment
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: github-actions[bot]
          body-includes: |
            ```${{ inputs.brand }}
      - name: Get package info
        id: package
        uses: codex-team/action-nodejs-package-info@v1.1
      - name: Create or update package info comment
        uses: peter-evans/create-or-update-comment@v2
        with:
          comment-id: ${{ steps.find-comment.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ```${{ inputs.brand }}
            npm i ${{ steps.package.outputs.name }}@${{ steps.package.outputs.version }}
          edit-mode: replace
  sonarqube:
    if: ${{ inputs.run_tests != true && (inputs.brand == '' || inputs.brand == 'vaultinum') }}
    uses: ./.github/workflows/sonarqube.yaml
    secrets: inherit
  sonarqube-with-coverage:
    if: ${{ inputs.run_tests == true && (inputs.brand == '' || inputs.brand == 'vaultinum') }}
    needs: publish-snapshot
    uses: ./.github/workflows/sonarqube.yaml
    secrets: inherit
    with:
      run_tests: ${{ inputs.run_tests }}
      brand: ${{ inputs.brand }}
  labeler:
    if:  ${{ inputs.brand == '' || inputs.brand == 'vaultinum' }}
    uses: ./.github/workflows/labeler.yaml
    secrets: inherit
